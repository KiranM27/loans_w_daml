-- LoanRequest template represents a borrower's loan application
module LoanRequestWithLoanLimit where

import LoanWithRepayment
import LoanLimitWithRepayment
import RepaymentRestriction

template LoanRequestWithLoanLimit

  with
    borrower : Party
    bank : Party
    amount : Decimal
  where
    signatory borrower
    observer bank

    -- Choice for the bank to approve the loan request
    choice ApproveRequest : (ContractId LoanWithRepayment, ContractId LoanLimitWithRepayment)
      with
        loanLimitCid : ContractId LoanLimitWithRepayment
      controller bank
      do
        -- Fetch the LoanLimit contract
        loanLimit <- fetch loanLimitCid

        -- Ensure the new loan does not exceed the bank's loan limit
        let newUsedAmount = loanLimit.usedAmount + amount
        assertMsg "Loan limit exceeded" (newUsedAmount <= loanLimit.totalLimit)

        -- Update the LoanLimit used amount
        updatedLoanLimitCid <- exercise loanLimitCid UpdateUsedAmount with amountToAdd = amount

        -- Create the RepaymentRestriction contract
        -- The min amount to be repaid is 10% of the loan amount, can be changed as needed 
        repaymentRestrictionCid <- create RepaymentRestriction with
          bank = bank
          borrower = borrower
          minRepaymentAmount = amount * 0.1

        -- Create the Loan contract
        loanCid <- create LoanWithRepayment with
          borrower = borrower
          bank = bank
          amount = amount
          disbursedAmount = 0.0
          repaidAmount = 0.0
          repaymentRestrictionCid = repaymentRestrictionCid

        return (loanCid, updatedLoanLimitCid)