module Test.UpdatedRepaymentRestrictions where

import Daml.Script

import LoanRequestWithLoanLimit
import LoanWithRepayment
import LoanLimitWithRepayment
import TokenAccountWithKey
import RepaymentRestriction

testLoanRepaymentWorkflow : Script ()
testLoanRepaymentWorkflow = script do
  -- Setup parties
  bank <- allocateParty "Bank"
  borrower <- allocateParty "Borrower"

  -- Create LoanLimit
  let loanLimitAmount = 10000.0
  loanLimitCid <- submit bank do
    createCmd LoanLimitWithRepayment with
      bank = bank
      totalLimit = loanLimitAmount
      usedAmount = 0.0


  -- Borrower creates a loan request
  loanRequestCid <- submit borrower do
    createCmd LoanRequestWithLoanLimit with
      borrower = borrower
      bank = bank
      amount = 5000.0

  -- Bank approves the LoanRequest, returns (loanCid, updatedLoanLimitCid)
  (loanCid, updatedLoanLimitCid) <- submit bank do
    exerciseCmd loanRequestCid ApproveRequest with
      loanLimitCid = loanLimitCid 

  -- Create TokenAccount for borrower
  tokenAccountCid <- submitMulti [borrower, bank] [] $ do
    createCmd TokenAccountWithKey with
      owner = borrower
      issuer = bank
      balance = 10000.0  -- Ensure borrower has enough balance to repay


  -- Disburse 2000 tokens to the borrower's account
  (updatedLoanCid, newTokenAccountCid) <- submitMulti [borrower, bank] [] $
      exerciseCmd loanCid Disburse with
          tokenAccountCid = tokenAccountCid
          disburseAmount = 2000.0

  -- Repay partial repayment
  -- Repay 50, which is less than the minimum repayment amount of 10% of the loan amount
  -- So, it should fail
  let partialRepaymentAmount = 50.0
  submitMustFail borrower do
    exerciseCmd updatedLoanCid Repay with
      repaymentAmount = partialRepaymentAmount
      tokenAccountCid = tokenAccountCid


  -- Create a new repayment restriction with a lower minimum repayment amount
  -- So that the partial repayment of 50 should now be allowed
  let newMinRepaymentAmount = 25.0
  newRepaymentRestrictionCid <- submit bank do
    createCmd RepaymentRestriction with
      bank = bank
      borrower = borrower
      minRepaymentAmount = newMinRepaymentAmount


  -- Update the loan with the new repayment restriction
  updatedLoanCid <- submit bank do
    exerciseCmd updatedLoanCid UpdateRepaymentRestriction with
      repaymentRestrictionCid = newRepaymentRestrictionCid

  -- Repay 50, which is more than the new minimum repayment amount
  -- So, it should now be allowed
  (updatedLoanCid, updatedTokenAccountCid) <- submit borrower do
    exerciseCmd updatedLoanCid Repay with
      repaymentAmount = 50.0
      tokenAccountCid = newTokenAccountCid


  -- Verify the updated loan and token account
  Some loan <- queryContractId borrower updatedLoanCid
  assertMsg "Total repaid should be 50" (loan.repaidAmount == 50.0) -- Updating of the repaid amount on the loan contract 
  assertMsg "Disbursed amount should be 2000" (loan.disbursedAmount == 2000.0)

  Some tokenAccount <- queryContractId borrower updatedTokenAccountCid
  assertMsg "Token account balance should be 9950" (tokenAccount.balance == 11950.0)
  return ()
